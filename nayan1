from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from qiskit.visualization import plot_circuit_layout

# Initialize quantum and classical registers
qreg_q = QuantumRegister(4, 'q')
creg_c = ClassicalRegister(4, 'c')
circuit = QuantumCircuit(qreg_q, creg_c)

# Apply X gate to the fourth qubit
circuit.x(qreg_q[3])

# Apply Hadamard gates to all qubits
circuit.barrier()
for qubit in qreg_q:
    circuit.h(qubit)

# Apply controlled-X (CNOT) gates with the fourth qubit as the target
circuit.barrier()
for i in range(3):
    circuit.cx(qreg_q[i], qreg_q[3])

# Apply Hadamard gates to the first three qubits
circuit.barrier()
for i in range(3):
    circuit.h(qreg_q[i])

# Measure the first three qubits
circuit.barrier()
for i in range(3):
    circuit.measure(qreg_q[i], creg_c[i])

# Draw the circuit
circuit.draw('mpl')

